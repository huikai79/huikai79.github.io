name: "Notion -> Hugo -> GitHub Pages + Cloudflare"

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '*/20 * * * *'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with: { submodules: recursive }

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: { node-version: 20 }

      # .github/workflows/deploy.yml 关键段
      - name: Install npm dependencies
        run: |
          npm install --no-save \
            '@notionhq/client@^2.3.0' \
            'notion-to-md@^2.4.0'     \
            'p-limit@^6.2.0'          \
            'node-fetch@^3.3.2'

      - name: Sync Notion -> Markdown
        env:
          NOTION_TOKEN:       ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: node ./sync.mjs

      - name: 查看同步结果
        run: |
          echo "=== 文章 bundle 列表 ==="
          find content/posts -maxdepth 2 -type f -name "index.md"

      - name: Commit & push synced content
        run: |
          git config user.name  github-actions
          git config user.email github-actions@github.com
          git pull --rebase origin main || true
          git add content/posts                    # 只提交文章目录
          git commit -m "🔄 Sync from Notion ($(date -u +"%Y-%m-%dT%H:%M:%SZ"))" \
            || echo "Nothing to commit"
          git push origin main || echo "Push skipped"

      - name: Merge Blowfish theme overrides (no overwrite)
        run: |
          mkdir -p layouts assets
          rsync -a --ignore-existing themes/blowfish/layouts/ layouts/
          rsync -a --ignore-existing themes/blowfish/assets/ assets/

      - name: Restore article partials if missing
        run: |
          mkdir -p layouts/partials/article
          cp -n themes/blowfish/layouts/partials/article/author.html layouts/partials/article/ || true
          cp -n themes/blowfish/layouts/partials/article/pagination.html layouts/partials/article/ || true
          cp -n themes/blowfish/layouts/partials/article/related.html layouts/partials/article/ || true
      
          
      # 在这一步之后，确保把自己的文件再放回去（如果你把自定义文件放 my_overrides）：
      - name: Restore custom single & pagination
        run: |
          mkdir -p layouts/_default layouts/partials/article

          if [ -f my_overrides/layouts/_default/single.html ]; then
            cp -f my_overrides/layouts/_default/single.html layouts/_default/single.html
          fi

          if [ -f my_overrides/layouts/partials/article/pagination.html ]; then
            cp -f my_overrides/layouts/partials/article/pagination.html layouts/partials/article/pagination.html
          fi

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 0.124.1
          extended: true

      - name: Check Hugo version
        run: |
          which hugo
          hugo version
          hugo env

      - name: Ensure new Hugo is first in PATH   # ← 加这段
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH
        
      - name: Debug which templates are used
        run: hugo --printPathWarnings --templateMetrics --templateMetricsHints

      - name: Build site
        run: hugo --minify
        
      - name: List generated js/css
        run: ls -R public/js public/css || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          
      - name: Debug HTML output
        run: |
          head -n 80 public/posts/bealife/index.html || true
          echo "---- size ----"
          wc -c public/posts/bealife/index.html || true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Purge Cloudflare Cache
        if: ${{ success() }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'
