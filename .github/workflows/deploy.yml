name: "Notion -> Hugo -> GitHub Pages + Cloudflare"

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '*/20 * * * *'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with: { submodules: recursive }

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: { node-version: 20 }

      # .github/workflows/deploy.yml 关键段
      - name: Install npm dependencies
        run: |
          npm install --no-save \
            '@notionhq/client@^2.3.0' \
            'notion-to-md@^2.4.0'     \
            'p-limit@^6.2.0'          \
            'node-fetch@^3.3.2'

      - name: Sync Notion -> Markdown
        env:
          NOTION_TOKEN:       ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}  # 必須確定這個 secret 名對
        run: |
          echo "DB_ID=$NOTION_DATABASE_ID"   # ← 觀察輸出
          node ./sync.mjs

      - name: 查看同步结果
        run: ls -al content/posts && ls -al static/images

      - name: Commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add content/posts static/images
          git commit -m "🔄 Sync from Notion" || echo "Nothing to commit"
          git push

      - name: Merge Blowfish theme overrides (no overwrite)
        run: |
          mkdir -p layouts assets
          rsync -a --ignore-existing themes/blowfish/layouts/ layouts/
          rsync -a --ignore-existing themes/blowfish/assets/  assets/

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 0.124.1
          extended: true

      - name: Debug which templates are used
        run: hugo --printPathWarnings --templateMetrics --templateMetricsHints --minify

      - name: Build site
        run: hugo --minify

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Purge Cloudflare Cache
        if: ${{ success() }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'
