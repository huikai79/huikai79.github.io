name: Sync Notion → Build → Deploy → Purge Cache

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '*/20 * * * *' # Run every 20 minutes

permissions:
  contents: write
  pages:    write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # ✨ 這裡已移除 cache: npm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Sync Notion database to content/posts
        run: |
          npm install -g '@notionhq/client@^2.3.0' 'notion-to-md@^2.4.0'
          # --- 以下 Node 腳本略，與前版相同 ---
        env:
          NOTION_TOKEN:       ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_PAGE_URL }}

      - name: Convert HEIC/HEIF images to JPEG
        run: |
          sudo apt-get update
          sudo apt-get -y install imagemagick libheif-examples
          find ./static -type f \( -iname '*.heic' -o -iname '*.heif' \) -print0 |
          while IFS= read -r -d '' f; do
            echo "Converting $f"
            convert "$f" "${f%.*}.jpeg"
            rm "$f"
          done
          find ./content/posts -name '*.md' -exec sed -i 's/\.\(heic\|heif\)/.jpeg/gi' {} +

      - name: Merge Blowfish theme overrides
        run: |
          cp -rT themes/blowfish/layouts/ layouts/
          cp -rT themes/blowfish/assets/  assets/

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3.0.0
        with:
          hugo-version: 0.124.1
          extended: true

      - name: Build site
        run: hugo --minify

      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url:  ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id:   deployment
        uses: actions/deploy-pages@v4

      - name: Purge Cloudflare cache
        if: success()
        env:
          CLOUDFLARE_ZONE_ID:    ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          curl -sS -X POST "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE_ID}/purge_cache" \
               -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
               -H "Content-Type: application/json" \
               --data '{"purge_everything":true}' \
          | jq -e '.success' >/dev/null

